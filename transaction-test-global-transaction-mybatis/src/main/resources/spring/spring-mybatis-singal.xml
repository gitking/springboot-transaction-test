<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 读入properties配置属性文件 -->
    <context:property-placeholder location="classpath:properties/jdbc*.properties"></context:property-placeholder>

    <!-- 基于Druid数据库连接池的数据源配置 -->
    <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基于基本属性driverClassName,url, user, password   -->
        <property name="driverClassName" value="${jdbc1.driverClassName}"></property>
        <property name="url" value="${jdbc1.url}"></property>
        <property name="username" value="${jdbc1.username}"></property>
        <property name="password" value="${jdbc1.password}"></property>
    </bean>

    <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource1"></property>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
        <!-- 自动扫描mapper.xml文件，Mapper1使用数据源1,dataSource1 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper1/*Mapper.xml"></property>
    </bean>

    <!-- Mapper接口扫描包路径 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.transaction.test.global_transaction.mybatis.mapper1"></property>
        <!-- 当生成代理的mapper实现的时候， 根据此处配置，将不同的sqlSessionFactory注入不同的mapper，Mapper1使用数据源1,dataSource1  -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
    </bean>


    <!--========事务配置 BEGIN==========-->
    <!-- 事务管理器(由Spring管理MyBatis的事务) -->
    <bean id="transactionManger1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 关联数据源 -->
        <property name="dataSource" ref="dataSource1"></property>
        <!-- @Transactional可以使用qualifier指定使用哪个事务管理器对哪个数据源开启事务。 -->
        <qualifier value="user1TM"></qualifier>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManger1" proxy-target-class="true"></tx:annotation-driven>

    <!-- ============事务配置  END ===========-->
</beans>